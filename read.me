dotnet new console -n nombremystere

// See https://aka.ms/new-console-template for more information
Console.WriteLine("Nombre mystère");

const int NOMBRE_A_DEVINER = 42;

// boucle pour demander à l'utilisateur 
int nombreSaisi;
do
{
    Console.Write("Devinez le nombre : ");
    string saisieUtilisateur = Console.ReadLine();

// conv
    int nombreSaisi = int.Parse(saisieUtilisateur);

    



    

        // Comparer la tentative avec le nombre à deviner
        if (nombreSaisi < NOMBRE_A_DEVINER)
        
            Console.WriteLine("Le nombre est plus grand.");
        
        else if (nombreSaisi > NOMBRE_A_DEVINER)
        
            Console.WriteLine("Le nombre est plus petit.");
        
        else
    
            Console.WriteLine("Félicitations ! Vous avez trouvé le nombre.");
        
   

} while (nombreSaisi != NOMBRE_A_DEVINER);

Console.ReadLine();


--> boucle while on ne sait le nombre de tour la condition nous sort de la boucle
--> for on sai tle nombre  


POO:

1.Classe et objet :
    Une classe est un modèle ou un plan pour créer des objets.
    Un objet est une instance d'une classe.->variablee

Classe : Imagine une classe comme un modèle pour créer quelque chose. Par exemple, une classe "Animal" pourrait être un modèle pour créer différents types d'animaux.
Objet : Un objet est comme une chose réelle créée à partir de ce modèle. Par exemple, un objet "Chat" ou "Chien" serait créé à partir de la classe "Animal".

2.Encapsulation :

    Encapsulation signifie regrouper les données (champs) et les méthodes qui les manipulent au sein d'une même unité (la classe).
    Les membres de la classe peuvent être définis comme public, private, protected, etc., pour contrôler l'accès.

Encapsulation : C'est comme mettre des choses dans une boîte et la fermer à clé. Certaines choses peuvent être publiques (tout le monde peut les voir), tandis que d'autres sont privées (seule la boîte peut les voir).

3.Héritage :

    Héritage permet à une classe (classe dérivée) d'hériter des propriétés et des méthodes d'une autre classe (classe de base).

Héritage : C'est comme hériter de caractéristiques de ta famille. Par exemple, si une classe "Véhicule" a des roues, une classe "Voiture" qui hérite de "Véhicule" aura aussi des roues.

4.Polymorphisme :

    Le polymorphisme permet à des objets d'une classe de se comporter comme des objets d'une classe de base.
    Il existe le polymorphisme compile-time (overloading) et le polymorphisme runtime (override).

Polymorphisme : C'est comme utiliser une télécommande pour différentes télévisions. La télécommande (méthode) fait quelque chose, mais le résultat dépend du type de télévision (classe).

    Ces concepts de base de la POO en C# fournissent une fondation solide pour la conception et la création de logiciels modulaires, extensibles et faciles à maintenir.

    Un constructeur est une méthode spéciale dans la programmation orientée objet qui est utilisée pour initialiser un objet nouvellement créé. Lorsqu'un nouvel objet est instancié à partir d'une classe, le constructeur est appelé automatiquement pour effectuer des tâches d'initialisation nécessaires. Ces tâches peuvent inclure l'attribution de valeurs initiales aux propriétés de l'objet, l'initialisation de certaines variables d'instance, l'exécution de certaines opérations préliminaires, etc.